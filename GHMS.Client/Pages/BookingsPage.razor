@page "/booking-details"
@using System.Text.Json
@inject IJSRuntime JS

<h3 class="page-title">Booking Details</h3>

@if (bookings == null)
{
    <p class="loading-text">Loading bookings...</p>
}
else if (!bookings.Any())
{
    <p class="empty-text">No bookings found.</p>
}
else
{
    <div class="booking-grid">
        @foreach (var b in bookings)
        {
            <div class="booking-card">
                <div class="card-header">
                    <span class="booking-id">#@b.Id</span>
                    <span class="booking-type @GetBookingTypeClass(b.BookingType)">@b.BookingType</span>
                </div>
                <div class="card-body">
                    <p><strong>Guest:</strong> @($"{b.Fname} {b.Lname}")</p>
                    <p><strong>Room:</strong> @b.Room</p>
                    <p><strong>Check In:</strong> @b.CheckIn</p>
                    <p><strong>Check Out:</strong> @b.CheckOut</p>
                    <p><strong>Department:</strong> @b.Department</p>
                    <p><strong>Band Level:</strong> @b.BandLevel</p>
                    <p><strong>Reason:</strong> @b.Remarks</p>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<BookingModel> bookings;

    protected override async Task OnInitializedAsync()
    {
        // Get bookings from localStorage
        var json = await JS.InvokeAsync<string>("localStorage.getItem", "roomBookings");
        if (!string.IsNullOrEmpty(json))
        {
            bookings = JsonSerializer.Deserialize<List<BookingModel>>(json);
        }
        else
        {
            bookings = new List<BookingModel>();
        }
    }

    public class BookingModel
    {
        public long Id { get; set; }
        public string Fname { get; set; }
        public string Lname { get; set; }
        public string Room { get; set; }
        public int RoomId { get; set; }
        public string BookingType { get; set; }
        public string CheckIn { get; set; }
        public string CheckOut { get; set; }
        public string Department { get; set; }
        public string BandLevel { get; set; }
        public string Remarks { get; set; }
    }

    private string GetBookingTypeClass(string type) => type switch
    {
        "Confirm" => "type-confirm",
        "Tentative Booking" => "type-tentative",
        "Block Room" => "type-block",
        _ => "type-default"
    };
}
